// <auto-generated />
using System;
using MT.Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MT.Data.Migrations
{
    [DbContext(typeof(MonterDataContext))]
    [Migration("20220506091652_MonterYG5")]
    partial class MonterYG5
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("MT.Data.Models.Attribute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AtkBase")
                        .HasColumnType("int");

                    b.Property<int>("DefBase")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SpeedBase")
                        .HasColumnType("int");

                    b.Property<int>("StrengBase")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Attributes");
                });

            modelBuilder.Entity("MT.Data.Models.Monter", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Atk")
                        .HasColumnType("int");

                    b.Property<int>("AttributeID")
                        .HasColumnType("int");

                    b.Property<int>("Def")
                        .HasColumnType("int");

                    b.Property<int?>("EskillId")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("QskillId")
                        .HasColumnType("int");

                    b.Property<int>("TypeID")
                        .HasColumnType("int");

                    b.Property<int?>("UltimateId")
                        .HasColumnType("int");

                    b.Property<int?>("WskillId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("AttributeID");

                    b.HasIndex("EskillId");

                    b.HasIndex("QskillId");

                    b.HasIndex("TypeID");

                    b.HasIndex("UltimateId");

                    b.HasIndex("WskillId");

                    b.ToTable("Monters");
                });

            modelBuilder.Entity("MT.Data.Models.Skill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CoolDownTime")
                        .HasColumnType("int");

                    b.Property<int>("EffectiveTime")
                        .HasColumnType("int");

                    b.Property<int>("ManaConsume")
                        .HasColumnType("int");

                    b.Property<string>("SkillName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TypeSkillID")
                        .HasColumnType("int");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TypeSkillID");

                    b.ToTable("Skills");
                });

            modelBuilder.Entity("MT.Data.Models.Type", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AtkBase")
                        .HasColumnType("int");

                    b.Property<int>("DefBase")
                        .HasColumnType("int");

                    b.Property<int>("SpeedBase")
                        .HasColumnType("int");

                    b.Property<int>("StrengBase")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Types");
                });

            modelBuilder.Entity("MT.Data.Models.TypeSkill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.HasKey("Id");

                    b.ToTable("TypeSkills");
                });

            modelBuilder.Entity("MT.Data.Models.Monter", b =>
                {
                    b.HasOne("MT.Data.Models.Attribute", "Attribute")
                        .WithMany()
                        .HasForeignKey("AttributeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MT.Data.Models.Skill", "Eskill")
                        .WithMany()
                        .HasForeignKey("EskillId");

                    b.HasOne("MT.Data.Models.Skill", "Qskill")
                        .WithMany()
                        .HasForeignKey("QskillId");

                    b.HasOne("MT.Data.Models.Type", "Type")
                        .WithMany()
                        .HasForeignKey("TypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MT.Data.Models.Skill", "Ultimate")
                        .WithMany()
                        .HasForeignKey("UltimateId");

                    b.HasOne("MT.Data.Models.Skill", "Wskill")
                        .WithMany()
                        .HasForeignKey("WskillId");

                    b.Navigation("Attribute");

                    b.Navigation("Eskill");

                    b.Navigation("Qskill");

                    b.Navigation("Type");

                    b.Navigation("Ultimate");

                    b.Navigation("Wskill");
                });

            modelBuilder.Entity("MT.Data.Models.Skill", b =>
                {
                    b.HasOne("MT.Data.Models.TypeSkill", "TypeSkill")
                        .WithMany()
                        .HasForeignKey("TypeSkillID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TypeSkill");
                });
#pragma warning restore 612, 618
        }
    }
}
