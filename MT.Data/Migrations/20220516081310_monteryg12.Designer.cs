// <auto-generated />
using System;
using MT.Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MT.Data.Migrations
{
    [DbContext(typeof(MonterDataContext))]
    [Migration("20220516081310_monteryg12")]
    partial class monteryg12
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("MT.Data.Models.Attribute", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AtkBase")
                        .HasColumnType("int");

                    b.Property<int>("DefBase")
                        .HasColumnType("int");

                    b.Property<int>("SpeedBase")
                        .HasColumnType("int");

                    b.Property<int>("StrengBase")
                        .HasColumnType("int");

                    b.HasKey("Name");

                    b.ToTable("Attributes");
                });

            modelBuilder.Entity("MT.Data.Models.Monter", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Atk")
                        .HasColumnType("int");

                    b.Property<string>("Attribute")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Def")
                        .HasColumnType("int");

                    b.Property<string>("EskillSkillName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("QskillSkillName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UltimateSkillName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("WskillSkillName")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Name");

                    b.HasIndex("EskillSkillName");

                    b.HasIndex("QskillSkillName");

                    b.HasIndex("UltimateSkillName");

                    b.HasIndex("WskillSkillName");

                    b.ToTable("Monters");
                });

            modelBuilder.Entity("MT.Data.Models.Skill", b =>
                {
                    b.Property<string>("SkillName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("CoolDownTime")
                        .HasColumnType("int");

                    b.Property<int>("EffectiveTime")
                        .HasColumnType("int");

                    b.Property<int>("ManaConsume")
                        .HasColumnType("int");

                    b.Property<string>("TypeSkill")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("SkillName");

                    b.ToTable("Skills");
                });

            modelBuilder.Entity("MT.Data.Models.Type", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AtkBase")
                        .HasColumnType("int");

                    b.Property<int>("DefBase")
                        .HasColumnType("int");

                    b.Property<int>("SpeedBase")
                        .HasColumnType("int");

                    b.Property<int>("StrengBase")
                        .HasColumnType("int");

                    b.HasKey("Name");

                    b.ToTable("Types");
                });

            modelBuilder.Entity("MT.Data.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MT.Data.Models.Monter", b =>
                {
                    b.HasOne("MT.Data.Models.Skill", "Eskill")
                        .WithMany()
                        .HasForeignKey("EskillSkillName");

                    b.HasOne("MT.Data.Models.Skill", "Qskill")
                        .WithMany()
                        .HasForeignKey("QskillSkillName");

                    b.HasOne("MT.Data.Models.Skill", "Ultimate")
                        .WithMany()
                        .HasForeignKey("UltimateSkillName");

                    b.HasOne("MT.Data.Models.Skill", "Wskill")
                        .WithMany()
                        .HasForeignKey("WskillSkillName");

                    b.Navigation("Eskill");

                    b.Navigation("Qskill");

                    b.Navigation("Ultimate");

                    b.Navigation("Wskill");
                });
#pragma warning restore 612, 618
        }
    }
}
